# Hubot XMPP

Connects Hubot to OrgSpan

[![Build Status](https://secure.travis-ci.org/chills42/hubot-orgspan.png?branch=master)](http://travis-ci.org/chills42/hubot-orgspan)

## Setup

Install dependencies with `npm`

	npm install

## Configuration

There are a few configuration values you can use when getting hubot-orgspan
running. The OrgSpan adapter requires only 3 (5 if you need specify server
and port) environment variables to be set to able to use it.

* `HUBOT_ORGSPAN_USERNAME`
* `HUBOT_ORGSPAN_PASSWORD`
* `HUBOT_ORGSPAN_ROOMS`

Optional:

* `HUBOT_ORGSPAN_HOST` The host name you want to connect to if its different than
  what is in the username jid.

`HUBOT_ORGSPAN_ROOMS` can be a comma separated list of rooms to join.  If
your rooms require passwords you should use the `jid:password` syntax.
Room passwords cannot contain `,`. Room names must be the full jid of the 
room for example `dev@conference.jabber.example.org`.

## Installation

After installing `hubot` with npm, you should create a standalone bot:

	hubot -c ./my-bot

After creating your new bot, you should modify the `package.json` and add the
`hubot-xmpp` dependency. After running `npm install` you should be ready to configure
and start up your bot.

## Group chat vs private JID

The jabber protocol does not broadcast real user JID in groupchat presence
stanzas unless the server/chat room is configured to do so.

If you need to send private chat in response to a groupchat message, use
hubot's send method with the groupchat jid and `envelope.user.type = 'direct'`.
hubot-orgspan will then automatically resolve the JID to a private
chat JID, and private message the sender.

If you need to get the private chat JID, you can use
'msg.envelope.user.privateChatJid' where msg is the parameter of hubot's
"route" callback.

Example:

```coffeescript
robot.respond /talk to me$/i, ( msg ) ->
  # Simply reply
  msg.reply "Hello #{msg.envelope.user.name}. Your private JID is #{msg.envelope.user.privateChatJID}"

robot.respond /talk to me in private$/i, ( msg ) ->
  msg.envelope.user.type = 'direct'
  msg.send "Hey #{msg.envelope.user.name}! You told me in room #{msg.envelope.user.room} to talk to you."
```
